version: '3.8'

services:
  # Backend Services
  transcription-service:
    build: .
    ports:
      - "5001:5001"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./input:/app/input
      - ./output:/app/output
    command: python services/transcription_service.py --port 5001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  meeting-minutes-service:
    build: .
    ports:
      - "5002:5002"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./output:/app/output
    command: python services/meeting_minutes_service.py --port 5002
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  file-management-service:
    build: .
    ports:
      - "5003:5003"
    volumes:
      - ./input:/app/input
      - ./output:/app/output
    command: python services/file_management_service.py --port 5003
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  api-service:
    build: .
    ports:
      - "5004:5004"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./input:/app/input
      - ./output:/app/output
    command: python services/api_service.py --port 5004
    depends_on:
      - transcription-service
      - meeting-minutes-service
      - file-management-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - api-service
    environment:
      - REACT_APP_API_URL=http://api-service:5004
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/build:/usr/share/nginx/html
    depends_on:
      - frontend
      - api-service
    profiles:
      - production

volumes:
  input:
    driver: local
  output:
    driver: local

networks:
  default:
    driver: bridge
